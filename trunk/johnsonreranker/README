This is the (much-simplified) README for the berkeley reranker

Author: Sudheer Kolachina, 08/07/2011
email: sudheer.kpg08@research.iiit.ac.in
============================================================
Note: This software was originally part of the brown parser.
For the original detailed readme, see README.original.
============================================================
(c) Mark Johnson, 24th April 2005
Mark_Johnson@Brown.edu

This directory contains programs for reranking the parses produced by
Michael Collin's generative parser.  This is research software, and so
is under constant development and change, and is not as user-friendly
or as well documented as might be desired.

These programs are (c) Mark Johnson, but may be used freely by anyone
for any purpose.  If you use my code, I request acknowledgement both
in any programs that contain my code, and in any research papers or
articles that contain results obtained using this code.

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.

============
INSTALLATION
============

To install the reranker, 'make'.

=======================
FEATURE AND MODEL FILES
=======================

The reranker model trained over the berkeley 50-best parses can be found
in the folder 'models/berkeley50spfinal'. There are two files: features.gz
and cvlm-l0c10P1-weights.gz. In case there is more than one reranker model,
change the values of the MODELDIR / ESTIMATORNICKNAME variables in the
runberkeleyreranker.sh.

Additionally, the reranker models for the berkeley parser trained using 
5 split-merge iteration cycles are available in the folder 
'models/berkeleysm5spnonfinal'. The folder also contains two files:
features.gz and cvlm-l1c10P1-weights.gz. The reranker can be run using
the runsm5berkeleyreranker.sh script. 

Finally, the reranker models trained for the Stanford parser are made
available in the 'models/stanford50spnonfinal' folder. The folder contains
the features file (features.gz) and the estimator weights file 
(cvlm-l1c10P1-weights.gz). This reranker should be run along with the
k-best output of the stanford parser using runstanfordreranker.sh script. 

==================
ADDITIONAL SCRIPTS 
==================

programs/prepare-data/parseFormatConvertor.py is a script that will 
convert the berkeley k-best parses into a format required by the reranker.

insertfailedsent.py is a script that will insert empty parses into the
reranked output corresponding to sentences for which the parser did 
not have even a single parse. 

=============================
RUNNING THE BERKELEY RERANKER
=============================

To run the Berkeley reranker:

./runberkeleyreranker.sh <k-bestparsefile>

The output of the reranker will be written to the standard output (STDOUT)
which can be redirected as necessary. 

To run the Berkeley (sm5) reranker: 

./runsm5berkeleyreranker.sh <k-bestparsefile>

To run the Stanford reranker:

./runstanfordreranker.sh <k-bestparsefile>
